version: "3.9"

services:
  bezeichner:
    image: alexfalkowski/bezeichner
    command: server
    restart: always
    environment:
      CONFIG_FILE: /config/bezeichner.yml
    ports:
      - "2000:8080"
    volumes:
      - "${PWD}/config:/config"

  standort:
    image: alexfalkowski/standort
    command: server
    restart: always
    environment:
      CONFIG_FILE: /config/standort.yml
    ports:
      - "3000:8080"
    volumes:
      - "${PWD}/config:/config"

  konfig:
    image: alexfalkowski/konfig
    command: server
    restart: always
    environment:
      - CONFIG_FILE=/config/konfig.yml
      - KONFIG_GIT_TOKEN=${GITHUB_TOKEN}
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=vault-plaintext-root-token
    ports:
      - "4000:8080"
    volumes:
      - "${PWD}/config:/config"
    depends_on:
      - vault
      - localstack

  jaegertracing:
    image: jaegertracing/all-in-one
    restart: always
    ports:
      - "16686:16686"
      - "6831:6831/udp"

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "5432:5432"

  redis:
    image: redis
    ports:
      - "6379:6379"

  datadog:
    image: datadog/agent
    restart: always
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.eu
      - DD_LOGS_ENABLED=true
      - DD_APM_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro

  nsqlookupd:
    image: nsqio/nsq
    command: /nsqlookupd -broadcast-address=localhost
    restart: always
    ports:
      - "4160:4160"
      - "4161:4161"

  nsqd:
    image: nsqio/nsq
    command: /nsqd -broadcast-address=localhost --lookupd-tcp-address=nsqlookupd:4160
    restart: always
    depends_on:
      - nsqlookupd
    ports:
      - "4150:4150"
      - "4151:4151"

  nats:
    image: nats
    ports:
      - "4222:4222"

  localstack:
    image: localstack/localstack
    restart: always
    ports:
      - "4566:4566"
    environment:
      SERVICES: "s3,sqs,ssm"

  vault:
    image: vault
    restart: always
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"
    cap_add:
      - IPC_LOCK

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus:/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/config.yml

  grafana:
    image: grafana/grafana-oss
    restart: always
    ports:
      - 10000:3000
    depends_on:
      - prometheus

  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:latest
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082
    restart: always
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092
